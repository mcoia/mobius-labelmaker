<?php
/**
* Implements hook_menu().
*/
function bnl_menu()
{
  $items['borrowing_n_lending'] = array(
    'title' => 'Borrowing and Lending',
    'page callback' => 'mobius_bnl_display',
    'access arguments' => array('access content'),
  );
  $items['borrowing_n_lending_get'] = array(
    'title' => 'Borrowing and Lending',
    'page callback' => 'mobius_bnl_postback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function mobius_bnl_display()
{
  drupal_page_is_cacheable($allow_caching = FALSE);
  drupal_add_css('/sites/all/libraries/chosen/chosen.css', 'external');
  drupal_add_js('/sites/all/libraries/chosen/chosen.jquery.js', 'external');

  $page = array (
    '#markup' =>
    '
    <h1>whatsup</h1>
    <span id="mobius_bnl_page_is_loaded"></span>
    <div id="bnl_panel">
    <label for="fromdate">From Date</label><input id="fromdate" type="text" />
    <label for="todate">To Date</label><input id="todate" type="text" />
    <div id="bnl_filter_select_master_container">
    
        <div class="bnl_filter_container">
        <div class="bnl_title_container">Owning Library</div>
            <div id="bnl_filter_branch_owning">
            </div>
            <div id="bnl_filter_cluster_owning">
            </div>
            <div id="bnl_filter_innreach_owning">
            </div>
        </div> <!-- bnl_filter_container -->

        <div class="bnl_filter_container">
        <div class="bnl_title_container">Borrowing Library</div>
            <div id="bnl_filter_branch_borrowing">
            </div>
            <div id="bnl_filter_cluster_borrowing">
            </div>
            <div id="bnl_filter_innreach_borrowing">
            </div>
        </div> <!-- bnl_filter_container -->

    </div> <!-- bnl_filter_select_master_container -->
    <div id="bnl_data_tables">
    <div id="bnl_branch_div"></div>
    <div id="bnl_cluster_div"></div>
    </div>
    <div id="bnl_pie"></div>
    <div id="bnl_submit_button">Get Results!</div>
    </div> <!-- bnl_panel -->
     '
  );  // end render array

  return $page;
}

function mobius_bnl_postback()
{
    
    $data_array = array();
    if($_GET['datefrom'] && $_GET['dateto'])
    {
        mobius_borrowing_n_lending_json();  // calling headers
        
        mobius_bnl_get_bnl_base($data_array);
        echo $data_array = drupal_json_encode($data_array);
    }
    else if($_GET['get_branches'])
    {
        mobius_borrowing_n_lending_json();  // calling headers
        mobius_bnl_get_all_branches($data_array);
        echo $data_array = drupal_json_encode($data_array);
    }

}

function mobius_bnl_get_all_branches(&$data_array)
{
    $data_array["branch"] = array();
    $data_array["cluster"] = array();
    $data_array["branch_to_cluster"] = array();
    $data_array["branch_order"] = array();
    $used = array();
    // First get the overall branch names and clusters to which they belong
     $query = "
       SELECT
       bnl_name.id \"branch_id\",
       bnl_name.name \"branch_name\",
       cluster.id \"cluster_id\",
       cluster.name \"cluster_name\",
       cluster.type \"cluster_type\"
       from
        mobius_bnl_branch branch,
        mobius_bnl_branch_name_final bnl_name,
        mobius_bnl_cluster cluster
        WHERE
        cluster.id = branch.cluster and
        bnl_name.id = branch.final_branch
        order by lower(bnl_name.name)
        ";
    $result = db_query($query);
    while($libraryRow = $result->fetchAssoc())
    {
        // Record the order
        if(!$used[$libraryRow["branch_id"]])
        {
            $used[$libraryRow["branch_id"]] = 1; 
            $data_array["branch_order"][] = $libraryRow["branch_id"];
        }
        // Record the branches
        if(!$data_array["branch"][$libraryRow["branch_id"]])
        {
            $data_array["branch"][$libraryRow["branch_id"]] = $libraryRow["branch_name"];
        }
        // Record the Clusters
        if(!$data_array["cluster"][$libraryRow["cluster_id"]])
        {
           $data_array["cluster"][$libraryRow["cluster_id"]] = array('name' => $libraryRow["cluster_name"], 'type' => $libraryRow["cluster_type"]);
        }

        // Connect branches to clusters
        if(!$data_array["branch_to_cluster"][$libraryRow["branch_id"]])
        {
            $data_array["branch_to_cluster"][$libraryRow["branch_id"]] = array();
        }
        $data_array["branch_to_cluster"][$libraryRow["branch_id"]][$libraryRow["cluster_id"]] = 1;
    }
}


function mobius_bnl_get_bnl_base(&$data_array)
{
    
    $data_array["amount_branch"] = array();
    $data_array["amount_cluster"] = array();
 
    $gotmore = 1;
    $offset = 1;
    $chunk = 1000;
    $totalRows = 0;
    while($gotmore > 0)
    {
        
        $query = "

           SELECT
       bnl_borrowing_name.name \"borrowing_branch_name\", bnl_borrowing_name.id \"borrowing_branch_id\",
       bnl_owning_name.name \"owning_branch_name\", bnl_owning_name.id \"owning_branch_id\",
       borrowing_cluster_ids.cname \"borrowing_cluster_name\",borrowing_cluster_ids.cid \"borrowing_cluster_id\",
       owning_cluster_ids.cname \"owning_cluster_name\",owning_cluster_ids.cid \"owning_cluster_id\",
       sum(bnl.quantity) \"quantity\"
            FROM 
            mobius_bnl_bnl bnl,
            mobius_bnl_branch bnl_borrowing_branch,
            mobius_bnl_branch bnl_owning_branch,
            mobius_bnl_branch_name_final bnl_borrowing_name,
            mobius_bnl_branch_name_final bnl_owning_name,
            mobius_bnl_branch_cluster borrowing_cluster_ids,
            mobius_bnl_branch_cluster owning_cluster_ids
            WHERE
            bnl_borrowing_name.id = bnl_borrowing_branch.final_branch and
            bnl_owning_name.id = bnl_owning_branch.final_branch and
            bnl.borrowing_branch = bnl_borrowing_branch.id and
            bnl.owning_branch = bnl_owning_branch.id and
            bnl_borrowing_branch.id = borrowing_cluster_ids.sid and
            bnl_owning_branch.id = owning_cluster_ids.sid and
            
            bnl.borrow_date between str_to_date( concat(?,'-01') ,'%Y-%m-%d') and str_to_date( concat(?,'-01') ,'%Y-%m-%d')
            and bnl.quantity > 0
            and borrowing_cluster_ids.cname !='merlin'
            -- and borrowing_cluster_ids.cname != owning_cluster_ids.cname
            
            group by 1,2,3,4,5,6,7
            limit $chunk
            offset $offset
            ";
        $vals = array($_GET['datefrom'],$_GET['dateto']);
        $result = db_query($query,$vals);
        while($libraryRow = $result->fetchAssoc())
        {
            // Stuff the meat of the data
            if(!$data_array["amount_branch"][$libraryRow["borrowing_branch_id"]])
            {
                $data_array["amount_branch"][$libraryRow["borrowing_branch_id"]] = array();
            }
            $data_array["amount_branch"][$libraryRow["borrowing_branch_id"]][$libraryRow["owning_branch_id"]] = ($libraryRow["quantity"] + 0);


            // Add up totals for each whole cluster
            if(!$data_array["amount_cluster"][$libraryRow["borrowing_cluster_id"]])
            {
                $data_array["amount_cluster"][$libraryRow["borrowing_cluster_id"]] = array();
            }
            if(!$data_array["amount_cluster"][$libraryRow["borrowing_cluster_id"]][$libraryRow["owning_cluster_id"]])
            {
                $data_array["amount_cluster"][$libraryRow["borrowing_cluster_id"]][$libraryRow["owning_cluster_id"]] = ($libraryRow["quantity"] + 0);
            }
            else
            {
                $data_array["amount_cluster"][$libraryRow["borrowing_cluster_id"]][$libraryRow["owning_cluster_id"]] += ($libraryRow["quantity"] + 0);
            }
        }
        $gotmore = $result->rowCount();
        $totalRows+=$gotmore;
        unset($rows);
        unset($result);
        $offset += $chunk;
    }
    $data_array["query"] = $query;
    $data_array["result_rows"] = $totalRows;
}

function mobius_borrowing_n_lending_json() {
  drupal_add_http_header('Content-Type', 'application/json');
  //drupal_add_http_header('Access-Control-Allow-Origin', "*");
  //drupal_add_http_header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');
 }
 
?>

